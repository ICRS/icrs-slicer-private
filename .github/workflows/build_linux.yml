name: Build Linux

on: 
    push:
      branches: 
       - main
      paths:
       - 'src/**'
       - '**/CMakeLists.txt'
       - 'version.inc'
       - 'bbl/**'
       - 'resources/**'

    pull_request:
      branches: 
       - main 
      paths:
       - 'src/**'
       - '**/CMakeLists.txt'
       - 'version.inc'
       - 'bbl/**'
       - 'resources/**'
    
jobs:
  appimage-builder:
    name: Linux AppImage Build

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y autoconf build-essential cmake curl eglexternalplatform-dev \
          extra-cmake-modules file git libcairo2-dev libcurl4-openssl-dev libdbus-1-dev libglew-dev libglu1-mesa-dev \
          libglu1-mesa-dev libgstreamer1.0-dev libgstreamerd-3-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-good1.0-dev \
          libgtk-3-dev libgtk-3-dev libmspack-dev libosmesa6-dev libsecret-1-dev libsoup2.4-dev libssl-dev libudev-dev libwayland-dev \
          libwebkit2gtk-4.0-dev libxkbcommon-dev locales locales-all m4 pkgconf sudo wayland-protocols wget
      - name: Install dependencies from BuildLinux.sh
        shell: bash
        run: sudo ./BuildLinux.sh -ur
      - name: Fix permissions
        shell: bash
        run: sudo chown $USER -R ./
      # - name: Build deps
      #   id: cache_deps
      #   uses: actions/cache@v3
      #   env:
      #     cache-name: ${{ runner.os }}-cache-orcaslicer_deps_x64
      #   with:
      #     path: ${{ github.workspace }}/deps/build/destdir
      #     key: build-${{ env.cache-name }}

      # - if: ${{ steps.cache_deps.outputs.cache-hit != 'true' }}
      #   name: Build deps
      #   working-directory: ${{ github.workspace }}
      #   continue-on-error: true
      #   run: ./BuildLinux.sh -dr
      - name: Download and extract deps
        working-directory: ${{ github.workspace }}
        run: |
          mkdir -p ${{ github.workspace }}/deps/build
          mkdir -p ${{ github.workspace }}/deps/build/destdir
          curl -LJO https://github.com/SoftFever/FileSharing/releases/download/OrcaSlicer_deps_Jun_2023/OrcaSlicer_dep_ubuntu_11-06-2023.tar.gz
          tar -zxf OrcaSlicer_dep_ubuntu_11-06-2023.tar.gz -C ${{ github.workspace }}/deps/build
          chown -R $(id -u):$(id -g) ${{ github.workspace }}/deps/build/destdir
          ls -l ${{ github.workspace }}/deps/build/destdir
          rm OrcaSlicer_dep_ubuntu_11-06-2023.tar.gz
      

      - name: Build Studio
        shell: bash
        run: |
          ./BuildLinux.sh -isr
          chmod +x ./build/OrcaSlicer_ubu64.AppImage
          
      - uses: actions/upload-artifact@v3
        with:
          name: OrcaSlicer_Linux
          path: './build/OrcaSlicer_ubu64.AppImage'
